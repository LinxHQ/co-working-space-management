"""updated id data type

Revision ID: 09578c0b848c
Revises: 
Create Date: 2024-04-11 16:47:51.759104

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = '09578c0b848c'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('reports',
    sa.Column('id', sa.String(length=60), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('content', sa.Text(), nullable=True),
    sa.Column('created_at', mysql.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('spaces',
    sa.Column('id', sa.String(length=60), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('type', sa.Enum('common_area', 'private_office', 'photo_studio', 'event_space', name='spacetype'), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('photos', sa.JSON(), nullable=True),
    sa.Column('fee', sa.DECIMAL(precision=10, scale=2), nullable=True),
    sa.Column('fee_type', sa.Enum('hourly', 'daily', 'monthly', name='feetype'), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('users',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('email', sa.String(length=100), nullable=True),
    sa.Column('password', sa.String(length=100), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('id')
    )
    op.create_table('bookings',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('user_id', sa.String(length=60), nullable=True),
    sa.Column('space_id', sa.String(length=60), nullable=True),
    sa.Column('start_date', sa.DateTime(), nullable=True),
    sa.Column('end_date', sa.DateTime(), nullable=True),
    sa.Column('status', sa.Enum('upcoming', 'past', 'cancelled', 'modified'), nullable=True),
    sa.Column('amount_paid', sa.DECIMAL(precision=10, scale=2), nullable=True),
    sa.Column('special_remarks', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['space_id'], ['spaces.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('notifications',
    sa.Column('id', sa.String(length=60), nullable=False),
    sa.Column('user_id', sa.String(length=60), nullable=False),
    sa.Column('message', mysql.TEXT(), nullable=True),
    sa.Column('read_status', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('rentals',
    sa.Column('id', sa.String(length=60), nullable=False),
    sa.Column('user_id', sa.String(length=60), nullable=False),
    sa.Column('space_id', sa.String(length=60), nullable=False),
    sa.Column('start_date', sa.DateTime(), nullable=False),
    sa.Column('end_date', sa.DateTime(), nullable=True),
    sa.Column('monthly_fee', sa.DECIMAL(precision=10, scale=2), nullable=False),
    sa.Column('special_remarks', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.ForeignKeyConstraint(['space_id'], ['spaces.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('payments',
    sa.Column('id', sa.String(length=60), nullable=False),
    sa.Column('booking_id', sa.String(length=60), nullable=True),
    sa.Column('rental_id', sa.String(length=60), nullable=True),
    sa.Column('type', sa.Enum('booking', 'rental'), nullable=True),
    sa.Column('payment_date', sa.DateTime(), nullable=True),
    sa.Column('payment_ref', sa.String(length=255), nullable=True),
    sa.Column('amount', sa.DECIMAL(precision=10, scale=2), nullable=True),
    sa.ForeignKeyConstraint(['booking_id'], ['bookings.id'], ),
    sa.ForeignKeyConstraint(['rental_id'], ['rentals.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('payments')
    op.drop_table('rentals')
    op.drop_table('notifications')
    op.drop_table('bookings')
    op.drop_table('users')
    op.drop_table('spaces')
    op.drop_table('reports')
    # ### end Alembic commands ###
